serial.onDataReceived(serial.delimiters(Delimiters.NewLine), function () {
    empfangen = serial.readUntil(serial.delimiters(Delimiters.NewLine))
})
function kiSteuerung() {
    let delimiter = 0
    let snaphotPos = empfangen.indexOf('Snapshot:', 0)
    if (snaphotPos > -1) {
        Ergebnis_String = ""
        basic.setLedColor(0x00ff00)
        empfangen = empfangen.substr(snaphotPos + 9, 99)
        delimiter = empfangen.indexOf(',', 0)
        seriennummer = empfangen.substr(0, delimiter)
        empfangen = empfangen.substr(delimiter + 1, 99)
        for (let Index = 0; Index <= 5; Index++) {
            delimiter = empfangen.indexOf(',', 0)
            snapshot[Index] = parseFloat(empfangen.substr(0, delimiter))
            empfangen = empfangen.substr(delimiter + 1, 99)
        }
        let start = control.millis()
        //serial.writeString('Predict Start' + serial.NEW_LINE)
        nnpredict.predict(snapshot, ergebnis)
        //serial.writeString('Predict Ende' + serial.NEW_LINE)
        //serial.writeString('Rechenzeit:' + (control.millis() - start).toString() + serial.NEW_LINE)
        Ergebnis_String = Ergebnis_String + seriennummer + ","
        Ergebnis_String = Ergebnis_String + ergebnis[0].toString() + ","
        Ergebnis_String = Ergebnis_String + ergebnis[1].toString() + ","
        serial.writeString('Ergebnis:' + Ergebnis_String + serial.NEW_LINE)
        basic.setLedColor(0x0000ff)
        basic.pause(10)
        basic.turnRgbLedOff()
    }
}
let empfangen = ''
let seriennummer = ''
serial.redirect(SerialPin.C16, SerialPin.C17, 115200)
serial.setRxBufferSize(100)
serial.setTxBufferSize(100)
nnpredict.fcnnfromjson(
    //'{"params":[{"layers":[6,7,7,3]},{"act":"relu"}],"coefs":[[[2.185928,1.496309,1.522178,1.714319,-1.150596,1.677011,-0.749636],[-0.09317,-0.071314,-0.076888,0.1043,-0.263998,-0.171422,-0.069272],[0.129805,0.240717,0.412471,-0.338298,0.130666,1.078454,0.125114],[0.711456,-1.367426,-0.441121,-1.110552,0.769639,-0.733147,-1.498929],[-0.819079,-0.024048,-0.054586,-0.148468,0.147663,0.94689,-0.501067],[-0.062343,-0.10456,0.01754,-0.032836,0.086917,-0.144326,0.014513]],[[-0.567738,-0.253946,-1.369503,-1.360915,1.591279,1.401443,-0.73064],[-0.115068,1.455205,0.593162,1.627869,0.296366,-0.899094,1.441038],[1.43652,-0.363023,0.823537,0.904851,-3.560236,0.434067,-0.0857],[1.217913,0.795807,0.112602,-0.87599,-1.61657,0.731423,1.010528],[1.167225,1.000949,0.121099,0.588289,-0.356012,-0.714354,0.820971],[-0.334122,-0.517626,0.213522,-1.151065,0.426447,0.171402,-0.484806],[-0.288218,0.940276,-2.11944,0.332797,1.619142,1.301996,0.101383]],[[1.063417,-1.409665,-0.132959],[0.136962,-1.324839,0.110504],[-1.552065,-3.224002,3.065771],[-6.842425,3.353123,0.796636],[-2.437974,1.589782,0.269849],[0.110999,-7.007495,1.346005],[-0.018475,-1.361247,0.875812]]],"intercepts":[[-0.478376,0.363791,-0.847974,-0.161365,1.151907,0.335257,1.448279],[1.020709,0.205093,0.012739,1.128083,-0.184789,-0.914779,0.15267],[0.508021,0.311167,-1.240975]]}')
    //'{"params":[{"layers":[6,7,7,3]},{"act":"relu"}],"coefs":[[[-0.102132,0.581902,0.899789,1.459608,-1.525647,1.308951,1.860599],[0.284712,0.799881,-0.051616,0.021013,0.04089,0.340785,0.081832],[-0.093086,-0.50136,0.02423,-0.130777,-0.256063,0.319765,0.101886],[-1.40063,-0.877007,-2.355452,0.653896,-0.528429,-0.225888,-0.390808],[-1.150072,-0.352536,0.451018,-1.264141,0.015457,-0.070491,-0.440907],[0.49196,0.26206,-0.054445,-0.176093,0.084209,-0.044384,0.081919]],[[-0.050639,0.0,0.168164,1.034332,1.051412,0.0,-0.0],[0.836378,0.0,0.569803,0.314929,-0.466218,0.0,-0.0],[0.022498,0.0,1.23998,-1.77929,0.107741,0.0,0.0],[0.164753,-0.0,0.872039,0.467815,1.31469,0.0,0.0],[-2.137852,0.0,-1.587904,-4.977885,1.172756,0.0,0.0],[-1.704351,0.0,-1.115914,-0.436464,0.692211,0.0,0.0],[0.138527,-0.0,0.745079,-3.175506,-3.142365,0.0,0.0]],[[1.405059,-2.95339,-0.105582],[-0.0,-0.0,0.0],[0.148704,-3.263879,1.214468],[2.827236,2.362764,-4.799461],[-3.64923,1.472535,0.958949],[-0.0,-0.0,0.0],[-0.0,-0.0,-0.0]]],"intercepts":[[0.978045,0.355159,0.62593,-0.135104,1.083251,-0.296904,-0.714115],[1.414499,-0.232791,-0.30695,0.333165,0.58962,-0.453849,-0.43172],[1.202417,-1.323693,-0.173327]]}')
    //'{"params":[{"layers":[6,7,7,3]},{"act":"relu"}],"coefs":[[[-4.02488,-1.231224,-0.725357,-2.03226,2.046903,2.764449,-0.0],[-0.085604,0.007256,0.056314,-0.040902,-0.0156,0.032189,-0.0],[0.860505,-0.777892,-0.171095,0.308693,0.480974,-0.001838,-0.0],[0.441112,-0.059928,1.440855,-0.730134,-0.837586,0.599456,0.0],[-0.140632,-0.2801,0.04515,-0.673042,-0.146798,-0.307614,-0.0],[0.183763,0.054747,-0.171567,0.045648,-0.069359,-0.081188,-0.0]],[[0.0,-5.028094,4.459395,0.67659,8.567539,8.013796,0.034615],[0.0,-0.133391,-0.29901,1.187803,2.412435,1.79522,-0.231752],[0.0,0.792065,1.653441,0.722055,0.153816,-1.237295,0.861013],[0.0,1.916044,1.887641,2.017304,0.108281,0.138891,-0.636704],[-0.0,-2.715147,-0.450136,-0.876458,-0.14606,0.073669,-0.432663],[-0.0,-0.591913,-0.280396,-0.51405,-3.026243,1.69876,-2.717517],[0.0,0.0,0.0,-0.0,0.0,-0.0,0.0]],[[-0.0,-0.0,-0.0],[3.158873,1.721066,-2.828637],[-1.697259,0.407542,1.124247],[-0.820452,-1.576033,1.209875],[-3.138211,1.821192,0.966989],[0.476534,-2.60001,1.47658],[1.925003,-3.656738,2.368786]]],"intercepts":[[-0.387754,1.167809,1.028871,2.359914,-0.261327,-1.156625,-0.496307],[-0.181431,0.24957,-0.828571,0.146243,0.125501,0.443045,1.084553],[0.202413,1.395986,-1.952797]]}')
    '{"params":[{"layers":[6,7,7,3]},{"act":"relu"}],"coefs":[[[2.044017,-2.722454,2.000679,-1.514816,0.333606,-2.761747,-0.0],[0.028879,0.096323,-0.24589,0.015551,0.00977,0.001861,0.0],[-0.070218,-0.472358,0.379994,-0.024475,0.003899,-0.393389,0.0],[-0.74473,-0.013117,0.923773,0.1172,0.654482,0.33238,-0.0],[-0.03287,0.362568,0.806845,-0.332245,-0.198489,0.397769,0.0],[0.02064,0.011437,-0.209757,0.022583,0.077942,-0.015708,0.0]],[[-0.0,0.563227,-0.0,-0.196192,-2.71285,2.666878,1.751509],[0.0,-0.0,-0.0,1.679954,1.483361,-2.497833,-0.268884],[-0.0,0.118874,-0.0,-1.440332,-0.33425,0.058711,0.811402],[0.0,-5.311466,0.0,-0.468864,0.057601,-0.743952,1.867721],[-0.0,0.394793,-0.0,-0.382019,-0.52901,3.864352,1.189382],[0.0,-6.229019,0.0,2.250281,1.383958,2.699693,0.394597],[-0.0,-0.0,-0.0,-0.0,-0.0,0.0,-0.0]],[[-0.0,-0.0,0.0],[1.111976,2.797596,-2.238281],[0.0,-0.0,-0.0],[-6.529347,0.144358,3.030409],[3.251293,1.944163,-2.400912],[1.324108,-3.076313,1.005805],[-1.958187,-0.03444,2.36584]]],"intercepts":[[-0.449843,0.772355,-0.254264,1.384457,-0.668279,1.448058,-0.658712],[-0.591404,1.820663,-0.630498,0.797055,1.109102,0.036825,-1.220646],[-0.320211,1.158411,-1.175748]]}')
let ergebnis: number[] = [0.0, 0.0]
let snapshot: number[] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
let Ergebnis_String = ""
control.inBackground(function () {
    while (true) {
        basic.pause(100)
        kiSteuerung()
    }
})
